
- stream
  scan_with_start
  combine_previous_with_start
- push
  - signal specific overrides
  - signal specific operators
- bind implementation for pull
  - implementation
  - test out with filter
  - pull specific overrides
  - additional pull operators
- unit tests
- merge stream branch

- unsubscription/disposal

- subject implementation
  - this should just be a simple subclass that creates its own disposable,
    overrides subscribe, and implements the subscriber functions

- more operators

- useful push/pull/subject/etc sublcasses

- scheduling (?)
  might be useful with coroutines for scheduleAfterDelay type stuff
  using a scheduler on subscription allows you to immediately
  return a disposable without everything flowing instantaneously, aiding
  in short circuiting signal flow
